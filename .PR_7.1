
#include <iostream>
using namespace std;

int main() {
    char character;
    string inputParagraph;
    string uniqueWords[1000];        // Array to store unique words
    int wordFrequencies[1000] = {0}; // Array to store frequencies of words
    int totalWords = 0, totalCharacters = 0, totalLines = 0;
    int wordCounter = 0; // Tracks number of unique words

    cout << "Enter your paragraph (end with '#'): " << endl;

    // Input the paragraph
    while ((character = getchar()) != '#') {
        inputParagraph += character;
    }

    // Convert paragraph to lowercase manually
    for (int i = 0; i < inputParagraph.length(); i++) {
        if (inputParagraph[i] >= 'A' && inputParagraph[i] <= 'Z') {
            inputParagraph[i] += 'a' - 'A';
        }
    }

    // Word counting logic
    string currentWord = "";
    for (int i = 0; i < inputParagraph.length(); i++) {
        character = inputParagraph[i];

        if (character == ' ' || character == '\n' || character == '\t') {
            if (!currentWord.empty()) {
                bool exists = false;
                for (int j = 0; j < wordCounter; j++) {
                    if (uniqueWords[j] == currentWord) {
                        wordFrequencies[j]++;
                        exists = true;
                        break;
                    }
                }

                if (!exists) {
                    uniqueWords[wordCounter] = currentWord;
                    wordFrequencies[wordCounter] = 1;
                    wordCounter++;
                }

                currentWord = "";
            }
        } else {
            currentWord += character;
        }
    }

    // Handle last word in paragraph
    if (!currentWord.empty()) {
        bool exists = false;
        for (int j = 0; j < wordCounter; j++) {
            if (uniqueWords[j] == currentWord) {
                wordFrequencies[j]++;
                exists = true;
                break;
            }
        }
        if (!exists) {
            uniqueWords[wordCounter] = currentWord;
            wordFrequencies[wordCounter] = 1;
            wordCounter++;
        }
    }

    cout << endl << "--- Statistics ---" << endl;
    cout << "Words: " << wordCounter << endl;

    for (int i = 0; i < wordCounter; i++) {
        cout << uniqueWords[i] << ": " << wordFrequencies[i] << endl;
    }

    cout << endl << "SMIT DAFDA_21CE021" << endl;
    return 0;
}
